---
include:
  - project: "das-platform/pipeline-fragments/shared-pipeline-templates"
    ref: v4.0.0
    file:
      - .docker-build.gitlab-ci.yml
      - .twistlock-scan.gitlab-ci.yml
      - .attestation-summary.gitlab-ci.yml
      - .create-release.gitlab-ci.yml
      - .shared-pipeline-resources.yml
      - .run-linters.gitlab-ci.yml

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

variables:
  # Variables needed by shared-pipeline-templates
  AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID_CICD} # DAS NFPX-CICD AWS Account
  BUILD_IMAGE_BASE: ${AWS_ACCOUNT_ID_CICD}.dkr.ecr.${AWS_REGION}.amazonaws.com/${CI_PROJECT_NAME}
  COVERITY_WORKING_DIR: ${CI_PROJECT_DIR}/coverity
  COVERITY_PROJECT_ID: 10421 # ngfp Coverity project ID
  COVERITY_STREAM_DEV: "[Dev]${ESATSID};${CI_PROJECT_NAME}"
  # Variables only used locally in this pipeline
  AWS_ACCOUNT_ID_DEV: 141479255310 # NFPX-DEV AWS Account
  AWS_ACCOUNT_ID_CICD: 608499519692 # DAS NFPX-CICD AWS Account
  AWS_ACCOUNT_ID_EEC_SHARED_SERVICES: 957766590265 # EEC Shared Services AWS Account
  AWS_REGION: us-west-2 # location of the cluster to deploy to
  ESATSID: 3628732 # NGFP ESATSId
  GROUP_NAME: ngfp1

default:
  tags:
    - aws
  image: ${AWS_ACCOUNT_ID_EEC_SHARED_SERVICES}.dkr.ecr.${AWS_REGION}.amazonaws.com/daa/openjdk/v17@sha256:affa47e116428b7730af44009c93c81ec04c070e76c8ff231c1166cdbae6d4f8

stages:
  - compile
  - test
  - build
  - publish
  - security_scans
  - runtime_test
  - release

run-linters:
  allow_failure: true

smoke-test:
  stage: runtime_test
  allow_failure: true
  image: node:21.6.0
  services:
    - name: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${CI_PROJECT_PATH}:${CI_COMMIT_SHORT_SHA}
      alias: ngfp-awareness
    - name: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${GROUP_NAME}/docker-images/fake-backend-service:2c61231b
      alias: node-server
  variables:
    TEST_TAG: smoke
    UI_AUTOMATION_HOST: ci-run
    NGINX_CONFIG: test
  before_script:
    - env
    - npm install -g rimraf
    - npm install json-server@0.17.4
    - apt install -y curl && (curl http://ngfp-awareness:8083 || true)
    - (curl http://node-server:8089/flightservice/v0/flights | head -n100  || true)
  script:
    - apt update --fix-missing && apt install -y libnss3 libnspr4 libgbm1 libx11-xcb1 libxrandr2 libxcomposite1 libxcursor1 libxdamage1
      libxi6 libgtk-3-0 libgdk-pixbuf2.0-0 libatk1.0-0 libasound2 libdbus-1-3 wget xvfb
    - rm -rf /var/lib/apt/lists/*
    - cd e2e
    - npm ci
    - npx playwright install
    - chmod +x run-tests.sh && ./run-tests.sh ${TEST_TAG}
  artifacts:
    paths:
      - e2e/reports/*.html
    when: always

unit-test:
  stage: test
  image: ${AWS_ACCOUNT_ID_EEC_SHARED_SERVICES}.dkr.ecr.${AWS_REGION}.amazonaws.com/daa/node/v18_1.1.0/daa/node/v18:1.1.0
  allow_failure: false
  script:
    - npm -g update npm
    - |
      echo -e "Using node version: `npm --version`"
      npm install --install-strategy=linked --no-update-notifier --no-save
    - npm run test
